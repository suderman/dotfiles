# 2018 Jon Suderman
# https://github.com/suderman/dotfiles

# Helper methods for prettier shell scripting - http://suderman.github.io/shelper
eval "$(cat ~/.local/share/shelper.sh || curl suderman.github.io/shelper/shelper.sh)"

# -----------------------------------------------------------------------------
# PATH
# -----------------------------------------------------------------------------

# Each bin listed in order it's checked
setpath() {

  # default path
  local DEFAULT_PATH=$PATH

  # relative bin
  local PATH="bin"

  # home bin
  (has ~/bin) && PATH="$PATH:$HOME/bin"

  # Support bin
  (has ~/Support/Bin) && PATH="$PATH:$HOME/Support/Bin"

  # rbenv bin
  (has ~/.rbenv/shims) && PATH="$PATH:$HOME/.rbenv/shims"
  (has ~/.rbenv/bin) && PATH="$PATH:$HOME/.rbenv/bin"

  # python bin
  (has ~/Library/Python/2.7/bin) && PATH="$PATH:$HOME/Library/Python/2.7/bin"
  (has ~/Library/Python/3.6/bin) && PATH="$PATH:$HOME/Library/Python/3.6/bin"

  # linuxbrew bin
  (has ~/.linuxbrew) && PATH="$PATH:$HOME/.linuxbrew/bin" 

  # homebrew bin 
  PATH="$PATH:/usr/local/bin:/usr/local/sbin"

  # default PATH
  PATH="$PATH:$DEFAULT_PATH"

  # strip duplicates
  echo $(printf "%s" "${PATH}" | /usr/bin/awk -v RS=: -v ORS=: '!($0 in a) {a[$0]; print}')
}

# Set PATH variable
export PATH=$(setpath)


# -----------------------------------------------------------------------------
# Environment Variables
# -----------------------------------------------------------------------------

# Some of these settings will look here
brew_prefix="/usr/local"
(has brew) && brew_prefix="$(brew --prefix)"

# Manually set your language environment
export LANG="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"

# use vim as an editor
export EDITOR=vim
export VISUAL=vim

# launchd
(is osx) && export LAUNCHD_PLISTS="~/.launchd"

# ~/.config
export XDG_CONFIG_HOME="$HOME/.config"

# chruby
source if $brew_prefix/share/chruby/chruby.sh
source if $brew_prefix/share/chruby/auto.sh

# rbenv
(has rbenv) && eval "$(rbenv init -)"


# -----------------------------------------------------------------------------
# NeoVim
# -----------------------------------------------------------------------------
if has nvim; then  

  # Use Neovim as "preferred editor"
  export EDITOR=nvim
  export VISUAL=nvim

  # Use Neovim instead of Vim or Vi
  alias vim=nvim
  alias vi=nvim

  # Check if inside a nvim session
  if defined "$NVIM_LISTEN_ADDRESS"; then

    # disallow nesting of nvims within nvims
    has nvr && alias nvim=nvr
    has nvr || alias nvim='echo "No nesting!"'

  # Use abduco to detach/reattach to an nvim session
  else
    has abduco && alias vsess='abduco -A nvim nvim'
  fi
fi

#------------------------------------------
# Private environment variables
#------------------------------------------
source if ~/.env.private
